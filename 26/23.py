"""При проведении эксперимента заряженные частицы попадают на чувствительный экран,
представляющий из себя матрицу размером 10 000 на 10 000 точек. При попадании каждой частицы на
экран в протоколе фиксируются координаты попадания: номер ряда (целое число от 1 до 10 000) и
номер позиции в ряду (целое число от 1 до 10 000). Точка экрана, в которую попала хотя бы одна
частица, считается светлой, точка, в которую ни одна частица не попала, – тёмной. Расстоянием от
точки до края экрана считается количество точек (неважно, светлых или тёмных), расположенных
между данной точкой и ближайшим краем экрана. Например, для всех точек ряда 1 расстояние до края
равно 0, для точек ряда 2, кроме крайней левой и крайней правой, оно равно 1 и т. д. Для группы
точек расстоянием до края считается расстояние для ближайшей к краю точки, принадлежащей группе.
Вам необходимо по заданному протоколу найти самую длинную группу светлых точек, расположенных в
одном ряду подряд, то есть без тёмных точек между ними. Если групп одинаковой максимальной длины
больше одной, нужно выбрать ту из них, которая расположена ближе к краю экрана. Входные данные
Первая строка входного файла содержит целое число N – общее количество частиц, попавших на экран.
Каждая из следующих N строк содержит два целых числа: номер ряда и номер позиции в ряду. В ответе
запишите два целых числа: сначала номер ряда, в котором расположена требуемая группа,
затем – расстояние от этой группы до края экрана."""

with open("23.txt", "r") as f:
    f.readline()
    sp = sorted(set(map(lambda x: tuple(map(int, x.split())), f.readlines())))
max_count = (0, 0, 0)  # кол-во, расстояние, ряд
count = 1
for i in range(1, len(sp)):
    if sp[i][0] == sp[i - 1][0] and sp[i][1] - sp[i - 1][1] == 1:
        d = min(sp[i][0] - 1, sp[i - count][1] - 1, 10000 - sp[i][0], 10000 - sp[i][1])
        count += 1
        max_count = max(max_count, (count, -d, sp[i][0]))
    else:
        count = 1
print(max_count)
